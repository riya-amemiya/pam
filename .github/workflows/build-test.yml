name: JavaScript CI
on:
    workflow_dispatch:
    push:
        branches:
            - master
            - develop
    pull_request:
        branches:
            - master
            - develop
        paths:
            - 'src/**/*'
            - '.github/workflows/**'
            - '.storybook/**/*'
            - 'yarn.lock'
            - 'yarn.lock'
            - 'tsconfig.json'
            - 'jest.config.js'
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true
jobs:
    setup:
        name: JavaScript Setup
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                node-version: [18.x, 20.x]
                os: [ubuntu-latest]
        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Cache Restore devDependencies
              id: cache-restore-dev-depends
              uses: actions/cache/restore@v3
              with:
                  path: '**/node_modules'
                  key: dev-depends-node${{ matrix.node-version }}-${{ matrix.os }}-${{ hashFiles('yarn.lock') }}
            - name: Install dependencies
              if: steps.cache-restore-dev-depends.outputs.cache-hit != 'true'
              run: yarn install --check-files && yarn list
            - name: Cache Save devDependencies
              if: steps.cache-restore-dev-depends.outputs.cache-hit != 'true'
              id: cache-save-dev-depends
              uses: actions/cache/save@v3
              with:
                  path: '**/node_modules'
                  key: dev-depends-node${{ matrix.node-version }}-${{ matrix.os }}-${{ hashFiles('yarn.lock') }}
    lint:
        needs: setup
        name: JavaScript Lint
        runs-on: ${{ matrix.os }}
        env:
            TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
            TURBO_TEAM: ${{ vars.TURBO_TEAM }}
        strategy:
            matrix:
                node-version: [18.x, 20.x]
                os: [ubuntu-latest]
        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Cache Restore devDependencies
              id: cache-restore-dev-depends
              uses: actions/cache/restore@v3
              with:
                  path: '**/node_modules'
                  key: dev-depends-node${{ matrix.node-version }}-${{ matrix.os }}-${{ hashFiles('yarn.lock') }}
            - name: Lint with yarn
              run: yarn lint:nofix:turbo
    test:
        needs: setup
        name: JavaScript Test
        runs-on: ${{ matrix.os }}
        env:
            TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
            TURBO_TEAM: ${{ vars.TURBO_TEAM }}
        strategy:
            matrix:
                node-version: [18.x, 20.x]
                os: [ubuntu-latest]
                shard: [1/2, 2/2]
        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js  ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Cache Restore devDependencies
              id: cache-restore-dev-depends
              uses: actions/cache/restore@v3
              with:
                  path: '**/node_modules'
                  key: dev-depends-node${{ matrix.node-version }}-${{ matrix.os }}-${{ hashFiles('yarn.lock') }}
            - name: Run tests with yarn
              run: yarn test:turbo -- -- --shard ${{ matrix.shard }}
    build:
        needs: [test, lint]
        name: JavaScript Build
        runs-on: ${{ matrix.os }}
        env:
            TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
            TURBO_TEAM: ${{ vars.TURBO_TEAM }}
            MICROCMS_API_KEY: ${{ secrets.MICROCMS_API_KEY }}
            NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
            NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        strategy:
            matrix:
                node-version: [18.x, 20.x]
                os: [ubuntu-latest]
        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Cache Restore devDependencies
              id: cache-restore-dev-depends
              uses: actions/cache/restore@v3
              with:
                  path: '**/node_modules'
                  key: dev-depends-node${{ matrix.node-version }}-${{ matrix.os }}-${{ hashFiles('yarn.lock') }}
            - name: Cache Restore build
              id: cache-restore-build
              uses: actions/cache/restore@v3
              with:
                  path: '**/.next'
                  key: build-node${{ matrix.node-version }}-${{ matrix.os }}-${{ hashFiles('yarn.lock') }}
            - name: Build with yarn
              run: yarn build:next:turbo
            - name: Cache Save build
              if: steps.cache-restore-build.outputs.cache-hit != 'true'
              id: cache-save-build
              uses: actions/cache/save@v3
              with:
                  path: '**/.next'
                  key: build-node${{ matrix.node-version }}-${{ matrix.os }}-${{ hashFiles('yarn.lock') }}